// <auto-generated />
using System;
using JunoBE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JunoBE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251027222931_initialpostgres")]
    partial class initialpostgres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JunoBE.Features.Address.AddressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PropertyEntityId")
                        .HasColumnType("integer");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("province")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PropertyEntityId")
                        .IsUnique();

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("JunoBE.Features.Properties.PropertyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("bathrooms")
                        .HasColumnType("integer");

                    b.Property<int>("bedrooms")
                        .HasColumnType("integer");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("homeStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("homeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("longitude")
                        .HasColumnType("double precision");

                    b.Property<int>("price")
                        .HasColumnType("integer");

                    b.Property<int>("square_meters")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("properties");
                });

            modelBuilder.Entity("JunoBE.Features.Address.AddressEntity", b =>
                {
                    b.HasOne("JunoBE.Features.Properties.PropertyEntity", "property")
                        .WithOne("address")
                        .HasForeignKey("JunoBE.Features.Address.AddressEntity", "PropertyEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("property");
                });

            modelBuilder.Entity("JunoBE.Features.Properties.PropertyEntity", b =>
                {
                    b.Navigation("address");
                });
#pragma warning restore 612, 618
        }
    }
}
